import { Address } from './address';
export declare class PartyIdentification {
    'address'?: Address;
    /**
    * The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**. Should not be before 1st January 1900.  Allowed only when `type` is **individual**.
    */
    'dateOfBirth'?: string;
    /**
    * First name of the individual.  Allowed only when `type` is **individual**.
    */
    'firstName'?: string;
    /**
    * The name of the entity.
    */
    'fullName': string;
    /**
    * Last name of the individual.  Allowed only when `type` is **individual**.
    */
    'lastName'?: string;
    /**
    * Your unique reference of the party. This should be consistent for all transfers initiated to/from the same party/counterparty. e.g Your client\'s unique wallet or payee ID
    */
    'reference'?: string;
    /**
    * The type of entity that owns the bank account.   Possible values: **individual**, **organization**, or **unknown**.
    */
    'type'?: PartyIdentification.TypeEnum;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace PartyIdentification {
    enum TypeEnum {
        Individual = "individual",
        Organization = "organization",
        Unknown = "unknown"
    }
}
