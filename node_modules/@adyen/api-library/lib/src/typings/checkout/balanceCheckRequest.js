"use strict";
/*
 * The version of the OpenAPI document: v70
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceCheckRequest = void 0;
class BalanceCheckRequest {
    static getAttributeTypeMap() {
        return BalanceCheckRequest.attributeTypeMap;
    }
}
exports.BalanceCheckRequest = BalanceCheckRequest;
BalanceCheckRequest.discriminator = undefined;
BalanceCheckRequest.attributeTypeMap = [
    {
        "name": "accountInfo",
        "baseName": "accountInfo",
        "type": "AccountInfo"
    },
    {
        "name": "additionalAmount",
        "baseName": "additionalAmount",
        "type": "Amount"
    },
    {
        "name": "additionalData",
        "baseName": "additionalData",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount"
    },
    {
        "name": "applicationInfo",
        "baseName": "applicationInfo",
        "type": "ApplicationInfo"
    },
    {
        "name": "billingAddress",
        "baseName": "billingAddress",
        "type": "Address"
    },
    {
        "name": "browserInfo",
        "baseName": "browserInfo",
        "type": "BrowserInfo"
    },
    {
        "name": "captureDelayHours",
        "baseName": "captureDelayHours",
        "type": "number"
    },
    {
        "name": "dateOfBirth",
        "baseName": "dateOfBirth",
        "type": "string"
    },
    {
        "name": "dccQuote",
        "baseName": "dccQuote",
        "type": "ForexQuote"
    },
    {
        "name": "deliveryAddress",
        "baseName": "deliveryAddress",
        "type": "Address"
    },
    {
        "name": "deliveryDate",
        "baseName": "deliveryDate",
        "type": "Date"
    },
    {
        "name": "deviceFingerprint",
        "baseName": "deviceFingerprint",
        "type": "string"
    },
    {
        "name": "fraudOffset",
        "baseName": "fraudOffset",
        "type": "number"
    },
    {
        "name": "installments",
        "baseName": "installments",
        "type": "Installments"
    },
    {
        "name": "localizedShopperStatement",
        "baseName": "localizedShopperStatement",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "merchantAccount",
        "baseName": "merchantAccount",
        "type": "string"
    },
    {
        "name": "merchantOrderReference",
        "baseName": "merchantOrderReference",
        "type": "string"
    },
    {
        "name": "merchantRiskIndicator",
        "baseName": "merchantRiskIndicator",
        "type": "MerchantRiskIndicator"
    },
    {
        "name": "metadata",
        "baseName": "metadata",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "orderReference",
        "baseName": "orderReference",
        "type": "string"
    },
    {
        "name": "paymentMethod",
        "baseName": "paymentMethod",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "recurring",
        "baseName": "recurring",
        "type": "Recurring"
    },
    {
        "name": "recurringProcessingModel",
        "baseName": "recurringProcessingModel",
        "type": "BalanceCheckRequest.RecurringProcessingModelEnum"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "selectedBrand",
        "baseName": "selectedBrand",
        "type": "string"
    },
    {
        "name": "selectedRecurringDetailReference",
        "baseName": "selectedRecurringDetailReference",
        "type": "string"
    },
    {
        "name": "sessionId",
        "baseName": "sessionId",
        "type": "string"
    },
    {
        "name": "shopperEmail",
        "baseName": "shopperEmail",
        "type": "string"
    },
    {
        "name": "shopperIP",
        "baseName": "shopperIP",
        "type": "string"
    },
    {
        "name": "shopperInteraction",
        "baseName": "shopperInteraction",
        "type": "BalanceCheckRequest.ShopperInteractionEnum"
    },
    {
        "name": "shopperLocale",
        "baseName": "shopperLocale",
        "type": "string"
    },
    {
        "name": "shopperName",
        "baseName": "shopperName",
        "type": "Name"
    },
    {
        "name": "shopperReference",
        "baseName": "shopperReference",
        "type": "string"
    },
    {
        "name": "shopperStatement",
        "baseName": "shopperStatement",
        "type": "string"
    },
    {
        "name": "socialSecurityNumber",
        "baseName": "socialSecurityNumber",
        "type": "string"
    },
    {
        "name": "splits",
        "baseName": "splits",
        "type": "Array<Split>"
    },
    {
        "name": "store",
        "baseName": "store",
        "type": "string"
    },
    {
        "name": "telephoneNumber",
        "baseName": "telephoneNumber",
        "type": "string"
    },
    {
        "name": "threeDS2RequestData",
        "baseName": "threeDS2RequestData",
        "type": "ThreeDS2RequestData"
    },
    {
        "name": "threeDSAuthenticationOnly",
        "baseName": "threeDSAuthenticationOnly",
        "type": "boolean"
    },
    {
        "name": "totalsGroup",
        "baseName": "totalsGroup",
        "type": "string"
    },
    {
        "name": "trustedShopper",
        "baseName": "trustedShopper",
        "type": "boolean"
    }
];
(function (BalanceCheckRequest) {
    let RecurringProcessingModelEnum;
    (function (RecurringProcessingModelEnum) {
        RecurringProcessingModelEnum["CardOnFile"] = "CardOnFile";
        RecurringProcessingModelEnum["Subscription"] = "Subscription";
        RecurringProcessingModelEnum["UnscheduledCardOnFile"] = "UnscheduledCardOnFile";
    })(RecurringProcessingModelEnum = BalanceCheckRequest.RecurringProcessingModelEnum || (BalanceCheckRequest.RecurringProcessingModelEnum = {}));
    let ShopperInteractionEnum;
    (function (ShopperInteractionEnum) {
        ShopperInteractionEnum["Ecommerce"] = "Ecommerce";
        ShopperInteractionEnum["ContAuth"] = "ContAuth";
        ShopperInteractionEnum["Moto"] = "Moto";
        ShopperInteractionEnum["Pos"] = "POS";
    })(ShopperInteractionEnum = BalanceCheckRequest.ShopperInteractionEnum || (BalanceCheckRequest.ShopperInteractionEnum = {}));
})(BalanceCheckRequest = exports.BalanceCheckRequest || (exports.BalanceCheckRequest = {}));
//# sourceMappingURL=balanceCheckRequest.js.map