"use strict";
/*
 * The version of the OpenAPI document: v70
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DonationPaymentRequest = void 0;
class DonationPaymentRequest {
    static getAttributeTypeMap() {
        return DonationPaymentRequest.attributeTypeMap;
    }
}
exports.DonationPaymentRequest = DonationPaymentRequest;
DonationPaymentRequest.discriminator = undefined;
DonationPaymentRequest.attributeTypeMap = [
    {
        "name": "accountInfo",
        "baseName": "accountInfo",
        "type": "AccountInfo"
    },
    {
        "name": "additionalAmount",
        "baseName": "additionalAmount",
        "type": "Amount"
    },
    {
        "name": "additionalData",
        "baseName": "additionalData",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount"
    },
    {
        "name": "applicationInfo",
        "baseName": "applicationInfo",
        "type": "ApplicationInfo"
    },
    {
        "name": "authenticationData",
        "baseName": "authenticationData",
        "type": "AuthenticationData"
    },
    {
        "name": "billingAddress",
        "baseName": "billingAddress",
        "type": "Address"
    },
    {
        "name": "browserInfo",
        "baseName": "browserInfo",
        "type": "BrowserInfo"
    },
    {
        "name": "captureDelayHours",
        "baseName": "captureDelayHours",
        "type": "number"
    },
    {
        "name": "channel",
        "baseName": "channel",
        "type": "DonationPaymentRequest.ChannelEnum"
    },
    {
        "name": "checkoutAttemptId",
        "baseName": "checkoutAttemptId",
        "type": "string"
    },
    {
        "name": "company",
        "baseName": "company",
        "type": "Company"
    },
    {
        "name": "conversionId",
        "baseName": "conversionId",
        "type": "string"
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string"
    },
    {
        "name": "dateOfBirth",
        "baseName": "dateOfBirth",
        "type": "Date"
    },
    {
        "name": "dccQuote",
        "baseName": "dccQuote",
        "type": "ForexQuote"
    },
    {
        "name": "deliverAt",
        "baseName": "deliverAt",
        "type": "Date"
    },
    {
        "name": "deliveryAddress",
        "baseName": "deliveryAddress",
        "type": "Address"
    },
    {
        "name": "deliveryDate",
        "baseName": "deliveryDate",
        "type": "Date"
    },
    {
        "name": "deviceFingerprint",
        "baseName": "deviceFingerprint",
        "type": "string"
    },
    {
        "name": "donationAccount",
        "baseName": "donationAccount",
        "type": "string"
    },
    {
        "name": "donationOriginalPspReference",
        "baseName": "donationOriginalPspReference",
        "type": "string"
    },
    {
        "name": "donationToken",
        "baseName": "donationToken",
        "type": "string"
    },
    {
        "name": "enableOneClick",
        "baseName": "enableOneClick",
        "type": "boolean"
    },
    {
        "name": "enablePayOut",
        "baseName": "enablePayOut",
        "type": "boolean"
    },
    {
        "name": "enableRecurring",
        "baseName": "enableRecurring",
        "type": "boolean"
    },
    {
        "name": "entityType",
        "baseName": "entityType",
        "type": "DonationPaymentRequest.EntityTypeEnum"
    },
    {
        "name": "fraudOffset",
        "baseName": "fraudOffset",
        "type": "number"
    },
    {
        "name": "fundOrigin",
        "baseName": "fundOrigin",
        "type": "FundOrigin"
    },
    {
        "name": "fundRecipient",
        "baseName": "fundRecipient",
        "type": "FundRecipient"
    },
    {
        "name": "industryUsage",
        "baseName": "industryUsage",
        "type": "DonationPaymentRequest.IndustryUsageEnum"
    },
    {
        "name": "installments",
        "baseName": "installments",
        "type": "Installments"
    },
    {
        "name": "lineItems",
        "baseName": "lineItems",
        "type": "Array<LineItem>"
    },
    {
        "name": "localizedShopperStatement",
        "baseName": "localizedShopperStatement",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "mandate",
        "baseName": "mandate",
        "type": "Mandate"
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string"
    },
    {
        "name": "merchantAccount",
        "baseName": "merchantAccount",
        "type": "string"
    },
    {
        "name": "merchantOrderReference",
        "baseName": "merchantOrderReference",
        "type": "string"
    },
    {
        "name": "merchantRiskIndicator",
        "baseName": "merchantRiskIndicator",
        "type": "MerchantRiskIndicator"
    },
    {
        "name": "metadata",
        "baseName": "metadata",
        "type": "{ [key: string]: string; }"
    },
    {
        "name": "mpiData",
        "baseName": "mpiData",
        "type": "ThreeDSecureData"
    },
    {
        "name": "order",
        "baseName": "order",
        "type": "EncryptedOrderData"
    },
    {
        "name": "orderReference",
        "baseName": "orderReference",
        "type": "string"
    },
    {
        "name": "origin",
        "baseName": "origin",
        "type": "string"
    },
    {
        "name": "paymentMethod",
        "baseName": "paymentMethod",
        "type": "AchDetails | AfterpayDetails | AmazonPayDetails | AndroidPayDetails | ApplePayDetails | BacsDirectDebitDetails | BillDeskDetails | BlikDetails | CardDetails | CellulantDetails | DokuDetails | DotpayDetails | DragonpayDetails | EcontextVoucherDetails | GenericIssuerPaymentMethodDetails | GiropayDetails | GooglePayDetails | IdealDetails | KlarnaDetails | MasterpassDetails | MbwayDetails | MobilePayDetails | MolPayDetails | OpenInvoiceDetails | PayPalDetails | PayUUpiDetails | PayWithGoogleDetails | PaymentDetails | RatepayDetails | SamsungPayDetails | SepaDirectDebitDetails | StoredPaymentMethodDetails | UpiCollectDetails | UpiIntentDetails | VippsDetails | VisaCheckoutDetails | WeChatPayDetails | WeChatPayMiniProgramDetails | ZipDetails"
    },
    {
        "name": "platformChargebackLogic",
        "baseName": "platformChargebackLogic",
        "type": "PlatformChargebackLogic"
    },
    {
        "name": "recurringExpiry",
        "baseName": "recurringExpiry",
        "type": "string"
    },
    {
        "name": "recurringFrequency",
        "baseName": "recurringFrequency",
        "type": "string"
    },
    {
        "name": "recurringProcessingModel",
        "baseName": "recurringProcessingModel",
        "type": "DonationPaymentRequest.RecurringProcessingModelEnum"
    },
    {
        "name": "redirectFromIssuerMethod",
        "baseName": "redirectFromIssuerMethod",
        "type": "string"
    },
    {
        "name": "redirectToIssuerMethod",
        "baseName": "redirectToIssuerMethod",
        "type": "string"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "returnUrl",
        "baseName": "returnUrl",
        "type": "string"
    },
    {
        "name": "riskData",
        "baseName": "riskData",
        "type": "RiskData"
    },
    {
        "name": "sessionValidity",
        "baseName": "sessionValidity",
        "type": "string"
    },
    {
        "name": "shopperEmail",
        "baseName": "shopperEmail",
        "type": "string"
    },
    {
        "name": "shopperIP",
        "baseName": "shopperIP",
        "type": "string"
    },
    {
        "name": "shopperInteraction",
        "baseName": "shopperInteraction",
        "type": "DonationPaymentRequest.ShopperInteractionEnum"
    },
    {
        "name": "shopperLocale",
        "baseName": "shopperLocale",
        "type": "string"
    },
    {
        "name": "shopperName",
        "baseName": "shopperName",
        "type": "Name"
    },
    {
        "name": "shopperReference",
        "baseName": "shopperReference",
        "type": "string"
    },
    {
        "name": "shopperStatement",
        "baseName": "shopperStatement",
        "type": "string"
    },
    {
        "name": "socialSecurityNumber",
        "baseName": "socialSecurityNumber",
        "type": "string"
    },
    {
        "name": "splits",
        "baseName": "splits",
        "type": "Array<Split>"
    },
    {
        "name": "store",
        "baseName": "store",
        "type": "string"
    },
    {
        "name": "storePaymentMethod",
        "baseName": "storePaymentMethod",
        "type": "boolean"
    },
    {
        "name": "telephoneNumber",
        "baseName": "telephoneNumber",
        "type": "string"
    },
    {
        "name": "threeDS2RequestData",
        "baseName": "threeDS2RequestData",
        "type": "ThreeDS2RequestData2"
    },
    {
        "name": "threeDSAuthenticationOnly",
        "baseName": "threeDSAuthenticationOnly",
        "type": "boolean"
    },
    {
        "name": "trustedShopper",
        "baseName": "trustedShopper",
        "type": "boolean"
    }
];
(function (DonationPaymentRequest) {
    let ChannelEnum;
    (function (ChannelEnum) {
        ChannelEnum["IOs"] = "iOS";
        ChannelEnum["Android"] = "Android";
        ChannelEnum["Web"] = "Web";
    })(ChannelEnum = DonationPaymentRequest.ChannelEnum || (DonationPaymentRequest.ChannelEnum = {}));
    let EntityTypeEnum;
    (function (EntityTypeEnum) {
        EntityTypeEnum["NaturalPerson"] = "NaturalPerson";
        EntityTypeEnum["CompanyName"] = "CompanyName";
    })(EntityTypeEnum = DonationPaymentRequest.EntityTypeEnum || (DonationPaymentRequest.EntityTypeEnum = {}));
    let IndustryUsageEnum;
    (function (IndustryUsageEnum) {
        IndustryUsageEnum["DelayedCharge"] = "delayedCharge";
        IndustryUsageEnum["Installment"] = "installment";
        IndustryUsageEnum["NoShow"] = "noShow";
    })(IndustryUsageEnum = DonationPaymentRequest.IndustryUsageEnum || (DonationPaymentRequest.IndustryUsageEnum = {}));
    let RecurringProcessingModelEnum;
    (function (RecurringProcessingModelEnum) {
        RecurringProcessingModelEnum["CardOnFile"] = "CardOnFile";
        RecurringProcessingModelEnum["Subscription"] = "Subscription";
        RecurringProcessingModelEnum["UnscheduledCardOnFile"] = "UnscheduledCardOnFile";
    })(RecurringProcessingModelEnum = DonationPaymentRequest.RecurringProcessingModelEnum || (DonationPaymentRequest.RecurringProcessingModelEnum = {}));
    let ShopperInteractionEnum;
    (function (ShopperInteractionEnum) {
        ShopperInteractionEnum["Ecommerce"] = "Ecommerce";
        ShopperInteractionEnum["ContAuth"] = "ContAuth";
        ShopperInteractionEnum["Moto"] = "Moto";
        ShopperInteractionEnum["Pos"] = "POS";
    })(ShopperInteractionEnum = DonationPaymentRequest.ShopperInteractionEnum || (DonationPaymentRequest.ShopperInteractionEnum = {}));
})(DonationPaymentRequest = exports.DonationPaymentRequest || (exports.DonationPaymentRequest = {}));
//# sourceMappingURL=donationPaymentRequest.js.map