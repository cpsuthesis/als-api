"use strict";
/*
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateMerchantWebhookRequest = void 0;
class CreateMerchantWebhookRequest {
    static getAttributeTypeMap() {
        return CreateMerchantWebhookRequest.attributeTypeMap;
    }
}
exports.CreateMerchantWebhookRequest = CreateMerchantWebhookRequest;
CreateMerchantWebhookRequest.discriminator = undefined;
CreateMerchantWebhookRequest.attributeTypeMap = [
    {
        "name": "acceptsExpiredCertificate",
        "baseName": "acceptsExpiredCertificate",
        "type": "boolean"
    },
    {
        "name": "acceptsSelfSignedCertificate",
        "baseName": "acceptsSelfSignedCertificate",
        "type": "boolean"
    },
    {
        "name": "acceptsUntrustedRootCertificate",
        "baseName": "acceptsUntrustedRootCertificate",
        "type": "boolean"
    },
    {
        "name": "active",
        "baseName": "active",
        "type": "boolean"
    },
    {
        "name": "additionalSettings",
        "baseName": "additionalSettings",
        "type": "AdditionalSettings"
    },
    {
        "name": "communicationFormat",
        "baseName": "communicationFormat",
        "type": "CreateMerchantWebhookRequest.CommunicationFormatEnum"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "networkType",
        "baseName": "networkType",
        "type": "CreateMerchantWebhookRequest.NetworkTypeEnum"
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string"
    },
    {
        "name": "populateSoapActionHeader",
        "baseName": "populateSoapActionHeader",
        "type": "boolean"
    },
    {
        "name": "sslVersion",
        "baseName": "sslVersion",
        "type": "CreateMerchantWebhookRequest.SslVersionEnum"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "string"
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string"
    },
    {
        "name": "username",
        "baseName": "username",
        "type": "string"
    }
];
(function (CreateMerchantWebhookRequest) {
    let CommunicationFormatEnum;
    (function (CommunicationFormatEnum) {
        CommunicationFormatEnum["Http"] = "http";
        CommunicationFormatEnum["Json"] = "json";
        CommunicationFormatEnum["Soap"] = "soap";
    })(CommunicationFormatEnum = CreateMerchantWebhookRequest.CommunicationFormatEnum || (CreateMerchantWebhookRequest.CommunicationFormatEnum = {}));
    let NetworkTypeEnum;
    (function (NetworkTypeEnum) {
        NetworkTypeEnum["Local"] = "local";
        NetworkTypeEnum["Public"] = "public";
    })(NetworkTypeEnum = CreateMerchantWebhookRequest.NetworkTypeEnum || (CreateMerchantWebhookRequest.NetworkTypeEnum = {}));
    let SslVersionEnum;
    (function (SslVersionEnum) {
        SslVersionEnum["Http"] = "HTTP";
        SslVersionEnum["Tlsv12"] = "TLSv1.2";
        SslVersionEnum["Tlsv13"] = "TLSv1.3";
    })(SslVersionEnum = CreateMerchantWebhookRequest.SslVersionEnum || (CreateMerchantWebhookRequest.SslVersionEnum = {}));
})(CreateMerchantWebhookRequest = exports.CreateMerchantWebhookRequest || (exports.CreateMerchantWebhookRequest = {}));
//# sourceMappingURL=createMerchantWebhookRequest.js.map