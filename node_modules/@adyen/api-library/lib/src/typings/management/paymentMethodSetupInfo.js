"use strict";
/*
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMethodSetupInfo = void 0;
class PaymentMethodSetupInfo {
    static getAttributeTypeMap() {
        return PaymentMethodSetupInfo.attributeTypeMap;
    }
}
exports.PaymentMethodSetupInfo = PaymentMethodSetupInfo;
PaymentMethodSetupInfo.discriminator = undefined;
PaymentMethodSetupInfo.attributeTypeMap = [
    {
        "name": "afterpayTouch",
        "baseName": "afterpayTouch",
        "type": "AfterpayTouchInfo"
    },
    {
        "name": "applePay",
        "baseName": "applePay",
        "type": "ApplePayInfo"
    },
    {
        "name": "bcmc",
        "baseName": "bcmc",
        "type": "BcmcInfo"
    },
    {
        "name": "businessLineId",
        "baseName": "businessLineId",
        "type": "string"
    },
    {
        "name": "cartesBancaires",
        "baseName": "cartesBancaires",
        "type": "CartesBancairesInfo"
    },
    {
        "name": "clearpay",
        "baseName": "clearpay",
        "type": "ClearpayInfo"
    },
    {
        "name": "countries",
        "baseName": "countries",
        "type": "Array<string>"
    },
    {
        "name": "currencies",
        "baseName": "currencies",
        "type": "Array<string>"
    },
    {
        "name": "customRoutingFlags",
        "baseName": "customRoutingFlags",
        "type": "Array<string>"
    },
    {
        "name": "giroPay",
        "baseName": "giroPay",
        "type": "GiroPayInfo"
    },
    {
        "name": "googlePay",
        "baseName": "googlePay",
        "type": "GooglePayInfo"
    },
    {
        "name": "klarna",
        "baseName": "klarna",
        "type": "KlarnaInfo"
    },
    {
        "name": "mealVoucher_FR",
        "baseName": "mealVoucher_FR",
        "type": "MealVoucherFRInfo"
    },
    {
        "name": "paypal",
        "baseName": "paypal",
        "type": "PayPalInfo"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "shopperInteraction",
        "baseName": "shopperInteraction",
        "type": "PaymentMethodSetupInfo.ShopperInteractionEnum"
    },
    {
        "name": "sofort",
        "baseName": "sofort",
        "type": "SofortInfo"
    },
    {
        "name": "storeId",
        "baseName": "storeId",
        "type": "string"
    },
    {
        "name": "swish",
        "baseName": "swish",
        "type": "SwishInfo"
    },
    {
        "name": "twint",
        "baseName": "twint",
        "type": "TwintInfo"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "PaymentMethodSetupInfo.TypeEnum"
    },
    {
        "name": "vipps",
        "baseName": "vipps",
        "type": "VippsInfo"
    }
];
(function (PaymentMethodSetupInfo) {
    let ShopperInteractionEnum;
    (function (ShopperInteractionEnum) {
        ShopperInteractionEnum["ECommerce"] = "eCommerce";
        ShopperInteractionEnum["Pos"] = "pos";
        ShopperInteractionEnum["Moto"] = "moto";
        ShopperInteractionEnum["ContAuth"] = "contAuth";
    })(ShopperInteractionEnum = PaymentMethodSetupInfo.ShopperInteractionEnum || (PaymentMethodSetupInfo.ShopperInteractionEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["Afterpaytouch"] = "afterpaytouch";
        TypeEnum["Alipay"] = "alipay";
        TypeEnum["AlipayHk"] = "alipay_hk";
        TypeEnum["Amex"] = "amex";
        TypeEnum["Applepay"] = "applepay";
        TypeEnum["Bcmc"] = "bcmc";
        TypeEnum["Blik"] = "blik";
        TypeEnum["Cartebancaire"] = "cartebancaire";
        TypeEnum["Clearpay"] = "clearpay";
        TypeEnum["Cup"] = "cup";
        TypeEnum["Diners"] = "diners";
        TypeEnum["DirectEbanking"] = "directEbanking";
        TypeEnum["DirectdebitGb"] = "directdebit_GB";
        TypeEnum["Discover"] = "discover";
        TypeEnum["EbankingFi"] = "ebanking_FI";
        TypeEnum["EftposAustralia"] = "eftpos_australia";
        TypeEnum["Elo"] = "elo";
        TypeEnum["Elocredit"] = "elocredit";
        TypeEnum["Elodebit"] = "elodebit";
        TypeEnum["Girocard"] = "girocard";
        TypeEnum["Googlepay"] = "googlepay";
        TypeEnum["Hiper"] = "hiper";
        TypeEnum["Hipercard"] = "hipercard";
        TypeEnum["Ideal"] = "ideal";
        TypeEnum["InteracCard"] = "interac_card";
        TypeEnum["Jcb"] = "jcb";
        TypeEnum["Klarna"] = "klarna";
        TypeEnum["KlarnaAccount"] = "klarna_account";
        TypeEnum["KlarnaPaynow"] = "klarna_paynow";
        TypeEnum["Maestro"] = "maestro";
        TypeEnum["Mbway"] = "mbway";
        TypeEnum["Mc"] = "mc";
        TypeEnum["Mcdebit"] = "mcdebit";
        TypeEnum["MealVoucherFr"] = "mealVoucher_FR";
        TypeEnum["Mobilepay"] = "mobilepay";
        TypeEnum["Multibanco"] = "multibanco";
        TypeEnum["OnlineBankingPl"] = "onlineBanking_PL";
        TypeEnum["Paybybank"] = "paybybank";
        TypeEnum["Paypal"] = "paypal";
        TypeEnum["Payshop"] = "payshop";
        TypeEnum["Swish"] = "swish";
        TypeEnum["Trustly"] = "trustly";
        TypeEnum["Twint"] = "twint";
        TypeEnum["TwintPos"] = "twint_pos";
        TypeEnum["Vipps"] = "vipps";
        TypeEnum["Visa"] = "visa";
        TypeEnum["Visadebit"] = "visadebit";
        TypeEnum["Vpay"] = "vpay";
        TypeEnum["Wechatpay"] = "wechatpay";
        TypeEnum["WechatpayPos"] = "wechatpay_pos";
    })(TypeEnum = PaymentMethodSetupInfo.TypeEnum || (PaymentMethodSetupInfo.TypeEnum = {}));
})(PaymentMethodSetupInfo = exports.PaymentMethodSetupInfo || (exports.PaymentMethodSetupInfo = {}));
//# sourceMappingURL=paymentMethodSetupInfo.js.map