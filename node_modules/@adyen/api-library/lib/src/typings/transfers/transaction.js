"use strict";
/*
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction = void 0;
class Transaction {
    static getAttributeTypeMap() {
        return Transaction.attributeTypeMap;
    }
}
exports.Transaction = Transaction;
Transaction.discriminator = undefined;
Transaction.attributeTypeMap = [
    {
        "name": "accountHolderId",
        "baseName": "accountHolderId",
        "type": "string"
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount"
    },
    {
        "name": "balanceAccountId",
        "baseName": "balanceAccountId",
        "type": "string"
    },
    {
        "name": "balancePlatform",
        "baseName": "balancePlatform",
        "type": "string"
    },
    {
        "name": "bookingDate",
        "baseName": "bookingDate",
        "type": "Date"
    },
    {
        "name": "category",
        "baseName": "category",
        "type": "Transaction.CategoryEnum"
    },
    {
        "name": "counterparty",
        "baseName": "counterparty",
        "type": "CounterpartyV3"
    },
    {
        "name": "createdAt",
        "baseName": "createdAt",
        "type": "Date"
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string"
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string"
    },
    {
        "name": "instructedAmount",
        "baseName": "instructedAmount",
        "type": "Amount"
    },
    {
        "name": "paymentInstrumentId",
        "baseName": "paymentInstrumentId",
        "type": "string"
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string"
    },
    {
        "name": "referenceForBeneficiary",
        "baseName": "referenceForBeneficiary",
        "type": "string"
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "Transaction.StatusEnum"
    },
    {
        "name": "transferId",
        "baseName": "transferId",
        "type": "string"
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "Transaction.TypeEnum"
    },
    {
        "name": "valueDate",
        "baseName": "valueDate",
        "type": "Date"
    }
];
(function (Transaction) {
    let CategoryEnum;
    (function (CategoryEnum) {
        CategoryEnum["Bank"] = "bank";
        CategoryEnum["Card"] = "card";
        CategoryEnum["Grants"] = "grants";
        CategoryEnum["Internal"] = "internal";
        CategoryEnum["IssuedCard"] = "issuedCard";
        CategoryEnum["Migration"] = "migration";
        CategoryEnum["PlatformPayment"] = "platformPayment";
    })(CategoryEnum = Transaction.CategoryEnum || (Transaction.CategoryEnum = {}));
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum["Booked"] = "booked";
        StatusEnum["Pending"] = "pending";
    })(StatusEnum = Transaction.StatusEnum || (Transaction.StatusEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["AtmWithdrawal"] = "atmWithdrawal";
        TypeEnum["AtmWithdrawalReversal"] = "atmWithdrawalReversal";
        TypeEnum["BalanceAdjustment"] = "balanceAdjustment";
        TypeEnum["BalanceRollover"] = "balanceRollover";
        TypeEnum["BankTransfer"] = "bankTransfer";
        TypeEnum["Capture"] = "capture";
        TypeEnum["CaptureReversal"] = "captureReversal";
        TypeEnum["CardTransfer"] = "cardTransfer";
        TypeEnum["Chargeback"] = "chargeback";
        TypeEnum["ChargebackReversal"] = "chargebackReversal";
        TypeEnum["DepositCorrection"] = "depositCorrection";
        TypeEnum["Fee"] = "fee";
        TypeEnum["Grant"] = "grant";
        TypeEnum["Installment"] = "installment";
        TypeEnum["InstallmentReversal"] = "installmentReversal";
        TypeEnum["InternalTransfer"] = "internalTransfer";
        TypeEnum["InvoiceDeduction"] = "invoiceDeduction";
        TypeEnum["Leftover"] = "leftover";
        TypeEnum["ManualCorrection"] = "manualCorrection";
        TypeEnum["MiscCost"] = "miscCost";
        TypeEnum["Payment"] = "payment";
        TypeEnum["PaymentCost"] = "paymentCost";
        TypeEnum["Refund"] = "refund";
        TypeEnum["RefundReversal"] = "refundReversal";
        TypeEnum["Repayment"] = "repayment";
        TypeEnum["ReserveAdjustment"] = "reserveAdjustment";
        TypeEnum["SecondChargeback"] = "secondChargeback";
    })(TypeEnum = Transaction.TypeEnum || (Transaction.TypeEnum = {}));
})(Transaction = exports.Transaction || (exports.Transaction = {}));
//# sourceMappingURL=transaction.js.map