import { Address } from './address';
import { PhoneNumber } from './phoneNumber';
import { StockData } from './stockData';
import { TaxInformation } from './taxInformation';
import { TaxReportingClassification } from './taxReportingClassification';
import { WebData } from './webData';
export declare class Organization {
    /**
    * The date when the organization was incorporated in YYYY-MM-DD format.
    */
    'dateOfIncorporation'?: string;
    /**
    * Your description for the organization.
    */
    'description'?: string;
    /**
    * The organization\'s trading name, if different from the registered legal name.
    */
    'doingBusinessAs'?: string;
    /**
    * The email address of the legal entity.
    */
    'email'?: string;
    /**
    * The organization\'s legal name.
    */
    'legalName': string;
    'phone'?: PhoneNumber;
    'principalPlaceOfBusiness'?: Address;
    'registeredAddress': Address;
    /**
    * The organization\'s registration number.
    */
    'registrationNumber'?: string;
    'stockData'?: StockData;
    /**
    * The tax information of the organization.
    */
    'taxInformation'?: Array<TaxInformation>;
    'taxReportingClassification'?: TaxReportingClassification;
    /**
    * Type of organization.  Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
    */
    'type'?: Organization.TypeEnum;
    /**
    * The reason the organization has not provided a VAT number.  Possible values: **industryExemption**, **belowTaxThreshold**.
    */
    'vatAbsenceReason'?: Organization.VatAbsenceReasonEnum;
    /**
    * The organization\'s VAT number.
    */
    'vatNumber'?: string;
    'webData'?: WebData;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace Organization {
    enum TypeEnum {
        AssociationIncorporated = "associationIncorporated",
        GovernmentalOrganization = "governmentalOrganization",
        ListedPublicCompany = "listedPublicCompany",
        NonProfit = "nonProfit",
        PartnershipIncorporated = "partnershipIncorporated",
        PrivateCompany = "privateCompany"
    }
    enum VatAbsenceReasonEnum {
        IndustryExemption = "industryExemption",
        BelowTaxThreshold = "belowTaxThreshold"
    }
}
