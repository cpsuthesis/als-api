"use strict";
/**
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2021 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 *
 * Adyen for Platforms: Notifications
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * The version of the OpenAPI document: 6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KYCCheckStatusData = void 0;
class KYCCheckStatusData {
}
exports.KYCCheckStatusData = KYCCheckStatusData;
(function (KYCCheckStatusData) {
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum[StatusEnum["AwaitingData"] = 'AWAITING_DATA'] = "AwaitingData";
        StatusEnum[StatusEnum["DataProvided"] = 'DATA_PROVIDED'] = "DataProvided";
        StatusEnum[StatusEnum["Failed"] = 'FAILED'] = "Failed";
        StatusEnum[StatusEnum["InvalidData"] = 'INVALID_DATA'] = "InvalidData";
        StatusEnum[StatusEnum["Passed"] = 'PASSED'] = "Passed";
        StatusEnum[StatusEnum["Pending"] = 'PENDING'] = "Pending";
        StatusEnum[StatusEnum["PendingReview"] = 'PENDING_REVIEW'] = "PendingReview";
        StatusEnum[StatusEnum["RetryLimitReached"] = 'RETRY_LIMIT_REACHED'] = "RetryLimitReached";
        StatusEnum[StatusEnum["Unchecked"] = 'UNCHECKED'] = "Unchecked";
    })(StatusEnum = KYCCheckStatusData.StatusEnum || (KYCCheckStatusData.StatusEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum[TypeEnum["BankAccountVerification"] = 'BANK_ACCOUNT_VERIFICATION'] = "BankAccountVerification";
        TypeEnum[TypeEnum["CardVerification"] = 'CARD_VERIFICATION'] = "CardVerification";
        TypeEnum[TypeEnum["CompanyVerification"] = 'COMPANY_VERIFICATION'] = "CompanyVerification";
        TypeEnum[TypeEnum["IdentityVerification"] = 'IDENTITY_VERIFICATION'] = "IdentityVerification";
        TypeEnum[TypeEnum["LegalArrangementVerification"] = 'LEGAL_ARRANGEMENT_VERIFICATION'] = "LegalArrangementVerification";
        TypeEnum[TypeEnum["NonprofitVerification"] = 'NONPROFIT_VERIFICATION'] = "NonprofitVerification";
        TypeEnum[TypeEnum["PassportVerification"] = 'PASSPORT_VERIFICATION'] = "PassportVerification";
        TypeEnum[TypeEnum["PayoutMethodVerification"] = 'PAYOUT_METHOD_VERIFICATION'] = "PayoutMethodVerification";
        TypeEnum[TypeEnum["PciVerification"] = 'PCI_VERIFICATION'] = "PciVerification";
    })(TypeEnum = KYCCheckStatusData.TypeEnum || (KYCCheckStatusData.TypeEnum = {}));
})(KYCCheckStatusData = exports.KYCCheckStatusData || (exports.KYCCheckStatusData = {}));
//# sourceMappingURL=kYCCheckStatusData.js.map