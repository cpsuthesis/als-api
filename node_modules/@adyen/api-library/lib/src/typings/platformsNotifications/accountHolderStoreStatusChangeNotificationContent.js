"use strict";
/**
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 * Adyen NodeJS API Library
 * Copyright (c) 2021 Adyen B.V.
 * This file is open source and available under the MIT license.
 * See the LICENSE file for more info.
 *
 * Adyen for Platforms: Notifications
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * The version of the OpenAPI document: 6
 * Contact: developer-experience@adyen.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountHolderStoreStatusChangeNotificationContent = void 0;
class AccountHolderStoreStatusChangeNotificationContent {
}
exports.AccountHolderStoreStatusChangeNotificationContent = AccountHolderStoreStatusChangeNotificationContent;
(function (AccountHolderStoreStatusChangeNotificationContent) {
    let NewStatusEnum;
    (function (NewStatusEnum) {
        NewStatusEnum[NewStatusEnum["Active"] = 'Active'] = "Active";
        NewStatusEnum[NewStatusEnum["Closed"] = 'Closed'] = "Closed";
        NewStatusEnum[NewStatusEnum["Inactive"] = 'Inactive'] = "Inactive";
        NewStatusEnum[NewStatusEnum["InactiveWithModifications"] = 'InactiveWithModifications'] = "InactiveWithModifications";
        NewStatusEnum[NewStatusEnum["Pending"] = 'Pending'] = "Pending";
    })(NewStatusEnum = AccountHolderStoreStatusChangeNotificationContent.NewStatusEnum || (AccountHolderStoreStatusChangeNotificationContent.NewStatusEnum = {}));
    let OldStatusEnum;
    (function (OldStatusEnum) {
        OldStatusEnum[OldStatusEnum["Active"] = 'Active'] = "Active";
        OldStatusEnum[OldStatusEnum["Closed"] = 'Closed'] = "Closed";
        OldStatusEnum[OldStatusEnum["Inactive"] = 'Inactive'] = "Inactive";
        OldStatusEnum[OldStatusEnum["InactiveWithModifications"] = 'InactiveWithModifications'] = "InactiveWithModifications";
        OldStatusEnum[OldStatusEnum["Pending"] = 'Pending'] = "Pending";
    })(OldStatusEnum = AccountHolderStoreStatusChangeNotificationContent.OldStatusEnum || (AccountHolderStoreStatusChangeNotificationContent.OldStatusEnum = {}));
})(AccountHolderStoreStatusChangeNotificationContent = exports.AccountHolderStoreStatusChangeNotificationContent || (exports.AccountHolderStoreStatusChangeNotificationContent = {}));
//# sourceMappingURL=accountHolderStoreStatusChangeNotificationContent.js.map