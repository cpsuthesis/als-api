"use strict";
/*
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PCIQuestionnairesApi = void 0;
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const resource_1 = __importDefault(require("../resource"));
const models_1 = require("../../typings/legalEntityManagement/models");
class PCIQuestionnairesApi extends service_1.default {
    constructor(client) {
        super(client);
        this.API_BASEPATH = "https://kyc-test.adyen.com/lem/v3";
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }
    /**
    * @summary Get PCI questionnaire details
    * @param id {@link string } The unique identifier of the legal entity to get PCI questionnaire information.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link GetPciQuestionnaireInfosResponse }
    */
    async getPciQuestionnaireDetails(id, requestOptions) {
        const endpoint = `${this.baseUrl}/legalEntities/{id}/pciQuestionnaires`
            .replace("{" + "id" + "}", encodeURIComponent(String(id)));
        const resource = new resource_1.default(this, endpoint);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "GetPciQuestionnaireInfosResponse");
    }
    /**
    * @summary Get PCI questionnaire
    * @param id {@link string } The legal entity ID of the individual who signed the PCI questionnaire.
    * @param pciid {@link string } The unique identifier of the signed PCI questionnaire.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link GetPciQuestionnaireResponse }
    */
    async getPciQuestionnaire(id, pciid, requestOptions) {
        const endpoint = `${this.baseUrl}/legalEntities/{id}/pciQuestionnaires/{pciid}`
            .replace("{" + "id" + "}", encodeURIComponent(String(id)))
            .replace("{" + "pciid" + "}", encodeURIComponent(String(pciid)));
        const resource = new resource_1.default(this, endpoint);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "GetPciQuestionnaireResponse");
    }
    /**
    * @summary Generate PCI questionnaire
    * @param id {@link string } The legal entity ID of the individual who will sign the PCI questionnaire.
    * @param generatePciDescriptionRequest {@link GeneratePciDescriptionRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link GeneratePciDescriptionResponse }
    */
    async generatePciQuestionnaire(id, generatePciDescriptionRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/legalEntities/{id}/pciQuestionnaires/generatePciTemplates`
            .replace("{" + "id" + "}", encodeURIComponent(String(id)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(generatePciDescriptionRequest, "GeneratePciDescriptionRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "GeneratePciDescriptionResponse");
    }
    /**
    * @summary Sign PCI questionnaire
    * @param id {@link string } The legal entity ID of the individual who signed the PCI questionnaire.
    * @param pciSigningRequest {@link PciSigningRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PciSigningResponse }
    */
    async signPciQuestionnaire(id, pciSigningRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/legalEntities/{id}/pciQuestionnaires/signPciTemplates`
            .replace("{" + "id" + "}", encodeURIComponent(String(id)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(pciSigningRequest, "PciSigningRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PciSigningResponse");
    }
}
exports.PCIQuestionnairesApi = PCIQuestionnairesApi;
//# sourceMappingURL=pCIQuestionnairesApi.js.map