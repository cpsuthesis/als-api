import Service from "../../service";
import Client from "../../client";
import { Document } from "../../typings/legalEntityManagement/models";
import { IRequest } from "../../typings/requestOptions";
export declare class DocumentsApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Delete a document
    * @param id {@link string } The unique identifier of the document to be deleted.
    * @param requestOptions {@link IRequest.Options}
    */
    deleteDocument(id: string, requestOptions?: IRequest.Options): Promise<void>;
    /**
    * @summary Get a document
    * @param id {@link string } The unique identifier of the document.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link Document }
    */
    getDocument(id: string, requestOptions?: IRequest.Options): Promise<Document>;
    /**
    * @summary Update a document
    * @param id {@link string } The unique identifier of the document to be updated.
    * @param document {@link Document }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link Document }
    */
    updateDocument(id: string, document: Document, requestOptions?: IRequest.Options): Promise<Document>;
    /**
    * @summary Upload a document for verification checks
    * @param document {@link Document }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link Document }
    */
    uploadDocumentForVerificationChecks(document: Document, requestOptions?: IRequest.Options): Promise<Document>;
}
