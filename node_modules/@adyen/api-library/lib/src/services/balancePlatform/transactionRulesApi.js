"use strict";
/*
 * The version of the OpenAPI document: v2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionRulesApi = void 0;
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const resource_1 = __importDefault(require("../resource"));
const models_1 = require("../../typings/balancePlatform/models");
class TransactionRulesApi extends service_1.default {
    constructor(client) {
        super(client);
        this.API_BASEPATH = "https://balanceplatform-api-test.adyen.com/bcl/v2";
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }
    /**
    * @summary Delete a transaction rule
    * @param transactionRuleId {@link string } The unique identifier of the transaction rule.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link TransactionRule }
    */
    async deleteTransactionRule(transactionRuleId, requestOptions) {
        const endpoint = `${this.baseUrl}/transactionRules/{transactionRuleId}`
            .replace("{" + "transactionRuleId" + "}", encodeURIComponent(String(transactionRuleId)));
        const resource = new resource_1.default(this, endpoint);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "DELETE" });
        return models_1.ObjectSerializer.deserialize(response, "TransactionRule");
    }
    /**
    * @summary Get a transaction rule
    * @param transactionRuleId {@link string } The unique identifier of the transaction rule.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link TransactionRuleResponse }
    */
    async getTransactionRule(transactionRuleId, requestOptions) {
        const endpoint = `${this.baseUrl}/transactionRules/{transactionRuleId}`
            .replace("{" + "transactionRuleId" + "}", encodeURIComponent(String(transactionRuleId)));
        const resource = new resource_1.default(this, endpoint);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "TransactionRuleResponse");
    }
    /**
    * @summary Update a transaction rule
    * @param transactionRuleId {@link string } The unique identifier of the transaction rule.
    * @param transactionRuleInfo {@link TransactionRuleInfo }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link TransactionRule }
    */
    async updateTransactionRule(transactionRuleId, transactionRuleInfo, requestOptions) {
        const endpoint = `${this.baseUrl}/transactionRules/{transactionRuleId}`
            .replace("{" + "transactionRuleId" + "}", encodeURIComponent(String(transactionRuleId)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(transactionRuleInfo, "TransactionRuleInfo");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "PATCH" });
        return models_1.ObjectSerializer.deserialize(response, "TransactionRule");
    }
    /**
    * @summary Create a transaction rule
    * @param transactionRuleInfo {@link TransactionRuleInfo }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link TransactionRule }
    */
    async createTransactionRule(transactionRuleInfo, requestOptions) {
        const endpoint = `${this.baseUrl}/transactionRules`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(transactionRuleInfo, "TransactionRuleInfo");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "TransactionRule");
    }
}
exports.TransactionRulesApi = TransactionRulesApi;
//# sourceMappingURL=transactionRulesApi.js.map