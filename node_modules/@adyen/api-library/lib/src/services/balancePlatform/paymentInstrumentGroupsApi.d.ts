import Service from "../../service";
import Client from "../../client";
import { PaymentInstrumentGroup } from "../../typings/balancePlatform/models";
import { PaymentInstrumentGroupInfo } from "../../typings/balancePlatform/models";
import { TransactionRulesResponse } from "../../typings/balancePlatform/models";
import { IRequest } from "../../typings/requestOptions";
export declare class PaymentInstrumentGroupsApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Get a payment instrument group
    * @param id {@link string } The unique identifier of the payment instrument group.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentInstrumentGroup }
    */
    getPaymentInstrumentGroup(id: string, requestOptions?: IRequest.Options): Promise<PaymentInstrumentGroup>;
    /**
    * @summary Get all transaction rules for a payment instrument group
    * @param id {@link string } The unique identifier of the payment instrument group.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link TransactionRulesResponse }
    */
    getAllTransactionRulesForPaymentInstrumentGroup(id: string, requestOptions?: IRequest.Options): Promise<TransactionRulesResponse>;
    /**
    * @summary Create a payment instrument group
    * @param paymentInstrumentGroupInfo {@link PaymentInstrumentGroupInfo }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentInstrumentGroup }
    */
    createPaymentInstrumentGroup(paymentInstrumentGroupInfo: PaymentInstrumentGroupInfo, requestOptions?: IRequest.Options): Promise<PaymentInstrumentGroup>;
}
