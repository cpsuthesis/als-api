import Service from "../../service";
import Client from "../../client";
import { Logo } from "../../typings/management/models";
import { TerminalSettings } from "../../typings/management/models";
import { IRequest } from "../../typings/requestOptions";
export declare class TerminalSettingsTerminalLevelApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Get the terminal logo
    * @param terminalId {@link string } The unique identifier of the payment terminal.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link Logo }
    */
    getTerminalLogo(terminalId: string, requestOptions?: IRequest.Options): Promise<Logo>;
    /**
    * @summary Get terminal settings
    * @param terminalId {@link string } The unique identifier of the payment terminal.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link TerminalSettings }
    */
    getTerminalSettings(terminalId: string, requestOptions?: IRequest.Options): Promise<TerminalSettings>;
    /**
    * @summary Update the logo
    * @param terminalId {@link string } The unique identifier of the payment terminal.
    * @param logo {@link Logo }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link Logo }
    */
    updateLogo(terminalId: string, logo: Logo, requestOptions?: IRequest.Options): Promise<Logo>;
    /**
    * @summary Update terminal settings
    * @param terminalId {@link string } The unique identifier of the payment terminal.
    * @param terminalSettings {@link TerminalSettings }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link TerminalSettings }
    */
    updateTerminalSettings(terminalId: string, terminalSettings: TerminalSettings, requestOptions?: IRequest.Options): Promise<TerminalSettings>;
}
