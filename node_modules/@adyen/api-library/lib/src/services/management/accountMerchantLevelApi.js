"use strict";
/*
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountMerchantLevelApi = void 0;
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const resource_1 = __importDefault(require("../resource"));
const models_1 = require("../../typings/management/models");
class AccountMerchantLevelApi extends service_1.default {
    constructor(client) {
        super(client);
        this.API_BASEPATH = "https://management-test.adyen.com/v1";
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }
    /**
    * @summary Get a list of merchant accounts
    * @param pageNumber {@link number } The number of the page to fetch.
    * @param pageSize {@link number } The number of items to have on a page, maximum 100. The default is 10 items on a page.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ListMerchantResponse }
    */
    async listMerchantAccounts(requestOptions) {
        const endpoint = `${this.baseUrl}/merchants`;
        const resource = new resource_1.default(this, endpoint);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "ListMerchantResponse");
    }
    /**
    * @summary Get a merchant account
    * @param merchantId {@link string } The unique identifier of the merchant account.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link Merchant }
    */
    async getMerchantAccount(merchantId, requestOptions) {
        const endpoint = `${this.baseUrl}/merchants/{merchantId}`
            .replace("{" + "merchantId" + "}", encodeURIComponent(String(merchantId)));
        const resource = new resource_1.default(this, endpoint);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "GET" });
        return models_1.ObjectSerializer.deserialize(response, "Merchant");
    }
    /**
    * @summary Create a merchant account
    * @param createMerchantRequest {@link CreateMerchantRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link CreateMerchantResponse }
    */
    async createMerchantAccount(createMerchantRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/merchants`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(createMerchantRequest, "CreateMerchantRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "CreateMerchantResponse");
    }
    /**
    * @summary Request to activate a merchant account
    * @param merchantId {@link string } The unique identifier of the merchant account.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link RequestActivationResponse }
    */
    async requestToActivateMerchantAccount(merchantId, requestOptions) {
        const endpoint = `${this.baseUrl}/merchants/{merchantId}/activate`
            .replace("{" + "merchantId" + "}", encodeURIComponent(String(merchantId)));
        const resource = new resource_1.default(this, endpoint);
        const response = await (0, getJsonResponse_1.default)(resource, "", { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "RequestActivationResponse");
    }
}
exports.AccountMerchantLevelApi = AccountMerchantLevelApi;
//# sourceMappingURL=accountMerchantLevelApi.js.map