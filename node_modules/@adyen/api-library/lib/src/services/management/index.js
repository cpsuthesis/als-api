"use strict";
/*
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const aPICredentialsCompanyLevelApi_1 = require("./aPICredentialsCompanyLevelApi");
const aPICredentialsMerchantLevelApi_1 = require("./aPICredentialsMerchantLevelApi");
const aPIKeyCompanyLevelApi_1 = require("./aPIKeyCompanyLevelApi");
const aPIKeyMerchantLevelApi_1 = require("./aPIKeyMerchantLevelApi");
const accountCompanyLevelApi_1 = require("./accountCompanyLevelApi");
const accountMerchantLevelApi_1 = require("./accountMerchantLevelApi");
const accountStoreLevelApi_1 = require("./accountStoreLevelApi");
const allowedOriginsCompanyLevelApi_1 = require("./allowedOriginsCompanyLevelApi");
const allowedOriginsMerchantLevelApi_1 = require("./allowedOriginsMerchantLevelApi");
const clientKeyCompanyLevelApi_1 = require("./clientKeyCompanyLevelApi");
const clientKeyMerchantLevelApi_1 = require("./clientKeyMerchantLevelApi");
const myAPICredentialApi_1 = require("./myAPICredentialApi");
const paymentMethodsMerchantLevelApi_1 = require("./paymentMethodsMerchantLevelApi");
const payoutSettingsMerchantLevelApi_1 = require("./payoutSettingsMerchantLevelApi");
const splitConfigurationMerchantLevelApi_1 = require("./splitConfigurationMerchantLevelApi");
const terminalActionsCompanyLevelApi_1 = require("./terminalActionsCompanyLevelApi");
const terminalActionsTerminalLevelApi_1 = require("./terminalActionsTerminalLevelApi");
const terminalOrdersCompanyLevelApi_1 = require("./terminalOrdersCompanyLevelApi");
const terminalOrdersMerchantLevelApi_1 = require("./terminalOrdersMerchantLevelApi");
const terminalSettingsCompanyLevelApi_1 = require("./terminalSettingsCompanyLevelApi");
const terminalSettingsMerchantLevelApi_1 = require("./terminalSettingsMerchantLevelApi");
const terminalSettingsStoreLevelApi_1 = require("./terminalSettingsStoreLevelApi");
const terminalSettingsTerminalLevelApi_1 = require("./terminalSettingsTerminalLevelApi");
const terminalsTerminalLevelApi_1 = require("./terminalsTerminalLevelApi");
const usersCompanyLevelApi_1 = require("./usersCompanyLevelApi");
const usersMerchantLevelApi_1 = require("./usersMerchantLevelApi");
const webhooksCompanyLevelApi_1 = require("./webhooksCompanyLevelApi");
const webhooksMerchantLevelApi_1 = require("./webhooksMerchantLevelApi");
const service_1 = __importDefault(require("../../service"));
class ManagementAPI extends service_1.default {
    constructor(client) {
        super(client);
    }
    get APICredentialsCompanyLevelApi() {
        return new aPICredentialsCompanyLevelApi_1.APICredentialsCompanyLevelApi(this.client);
    }
    get APICredentialsMerchantLevelApi() {
        return new aPICredentialsMerchantLevelApi_1.APICredentialsMerchantLevelApi(this.client);
    }
    get APIKeyCompanyLevelApi() {
        return new aPIKeyCompanyLevelApi_1.APIKeyCompanyLevelApi(this.client);
    }
    get APIKeyMerchantLevelApi() {
        return new aPIKeyMerchantLevelApi_1.APIKeyMerchantLevelApi(this.client);
    }
    get AccountCompanyLevelApi() {
        return new accountCompanyLevelApi_1.AccountCompanyLevelApi(this.client);
    }
    get AccountMerchantLevelApi() {
        return new accountMerchantLevelApi_1.AccountMerchantLevelApi(this.client);
    }
    get AccountStoreLevelApi() {
        return new accountStoreLevelApi_1.AccountStoreLevelApi(this.client);
    }
    get AllowedOriginsCompanyLevelApi() {
        return new allowedOriginsCompanyLevelApi_1.AllowedOriginsCompanyLevelApi(this.client);
    }
    get AllowedOriginsMerchantLevelApi() {
        return new allowedOriginsMerchantLevelApi_1.AllowedOriginsMerchantLevelApi(this.client);
    }
    get ClientKeyCompanyLevelApi() {
        return new clientKeyCompanyLevelApi_1.ClientKeyCompanyLevelApi(this.client);
    }
    get ClientKeyMerchantLevelApi() {
        return new clientKeyMerchantLevelApi_1.ClientKeyMerchantLevelApi(this.client);
    }
    get MyAPICredentialApi() {
        return new myAPICredentialApi_1.MyAPICredentialApi(this.client);
    }
    get PaymentMethodsMerchantLevelApi() {
        return new paymentMethodsMerchantLevelApi_1.PaymentMethodsMerchantLevelApi(this.client);
    }
    get PayoutSettingsMerchantLevelApi() {
        return new payoutSettingsMerchantLevelApi_1.PayoutSettingsMerchantLevelApi(this.client);
    }
    get SplitConfigurationMerchantLevelApi() {
        return new splitConfigurationMerchantLevelApi_1.SplitConfigurationMerchantLevelApi(this.client);
    }
    get TerminalActionsCompanyLevelApi() {
        return new terminalActionsCompanyLevelApi_1.TerminalActionsCompanyLevelApi(this.client);
    }
    get TerminalActionsTerminalLevelApi() {
        return new terminalActionsTerminalLevelApi_1.TerminalActionsTerminalLevelApi(this.client);
    }
    get TerminalOrdersCompanyLevelApi() {
        return new terminalOrdersCompanyLevelApi_1.TerminalOrdersCompanyLevelApi(this.client);
    }
    get TerminalOrdersMerchantLevelApi() {
        return new terminalOrdersMerchantLevelApi_1.TerminalOrdersMerchantLevelApi(this.client);
    }
    get TerminalSettingsCompanyLevelApi() {
        return new terminalSettingsCompanyLevelApi_1.TerminalSettingsCompanyLevelApi(this.client);
    }
    get TerminalSettingsMerchantLevelApi() {
        return new terminalSettingsMerchantLevelApi_1.TerminalSettingsMerchantLevelApi(this.client);
    }
    get TerminalSettingsStoreLevelApi() {
        return new terminalSettingsStoreLevelApi_1.TerminalSettingsStoreLevelApi(this.client);
    }
    get TerminalSettingsTerminalLevelApi() {
        return new terminalSettingsTerminalLevelApi_1.TerminalSettingsTerminalLevelApi(this.client);
    }
    get TerminalsTerminalLevelApi() {
        return new terminalsTerminalLevelApi_1.TerminalsTerminalLevelApi(this.client);
    }
    get UsersCompanyLevelApi() {
        return new usersCompanyLevelApi_1.UsersCompanyLevelApi(this.client);
    }
    get UsersMerchantLevelApi() {
        return new usersMerchantLevelApi_1.UsersMerchantLevelApi(this.client);
    }
    get WebhooksCompanyLevelApi() {
        return new webhooksCompanyLevelApi_1.WebhooksCompanyLevelApi(this.client);
    }
    get WebhooksMerchantLevelApi() {
        return new webhooksMerchantLevelApi_1.WebhooksMerchantLevelApi(this.client);
    }
}
exports.default = ManagementAPI;
//# sourceMappingURL=index.js.map