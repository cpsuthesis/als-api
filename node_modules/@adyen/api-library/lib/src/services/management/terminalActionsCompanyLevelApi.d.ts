import Service from "../../service";
import Client from "../../client";
import { AndroidAppsResponse } from "../../typings/management/models";
import { AndroidCertificatesResponse } from "../../typings/management/models";
import { ExternalTerminalAction } from "../../typings/management/models";
import { ListExternalTerminalActionsResponse } from "../../typings/management/models";
import { IRequest } from "../../typings/requestOptions";
export declare class TerminalActionsCompanyLevelApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Get a list of Android apps
    * @param companyId {@link string } The unique identifier of the company account.
    * @param pageNumber {@link number } The number of the page to fetch.
    * @param pageSize {@link number } The number of items to have on a page, maximum 100. The default is 20 items on a page.
    * @param packageName {@link string } The package name that uniquely identifies the Android app.
    * @param versionCode {@link number } The version number of the app.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link AndroidAppsResponse }
    */
    listAndroidApps(companyId: string, requestOptions?: IRequest.Options): Promise<AndroidAppsResponse>;
    /**
    * @summary Get a list of Android certificates
    * @param companyId {@link string } The unique identifier of the company account.
    * @param pageNumber {@link number } The number of the page to fetch.
    * @param pageSize {@link number } The number of items to have on a page, maximum 100. The default is 20 items on a page.
    * @param certificateName {@link string } The name of the certificate.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link AndroidCertificatesResponse }
    */
    listAndroidCertificates(companyId: string, requestOptions?: IRequest.Options): Promise<AndroidCertificatesResponse>;
    /**
    * @summary Get a list of terminal actions
    * @param companyId {@link string } The unique identifier of the company account.
    * @param pageNumber {@link number } The number of the page to fetch.
    * @param pageSize {@link number } The number of items to have on a page, maximum 100. The default is 20 items on a page.
    * @param status {@link string } Returns terminal actions with the specified status.  Allowed values: **pending**, **successful**, **failed**, **cancelled**, **tryLater**.
    * @param type {@link string } Returns terminal actions of the specified type.  Allowed values: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, **UninstallAndroidCertificate**.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ListExternalTerminalActionsResponse }
    */
    listTerminalActions(companyId: string, requestOptions?: IRequest.Options): Promise<ListExternalTerminalActionsResponse>;
    /**
    * @summary Get terminal action
    * @param companyId {@link string } The unique identifier of the company account.
    * @param actionId {@link string } The unique identifier of the terminal action.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ExternalTerminalAction }
    */
    getTerminalAction(companyId: string, actionId: string, requestOptions?: IRequest.Options): Promise<ExternalTerminalAction>;
}
