import Service from "../../service";
import Client from "../../client";
import { AllowedOrigin } from "../../typings/management/models";
import { AllowedOriginsResponse } from "../../typings/management/models";
import { IRequest } from "../../typings/requestOptions";
export declare class AllowedOriginsMerchantLevelApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Delete an allowed origin
    * @param merchantId {@link string } The unique identifier of the merchant account.
    * @param apiCredentialId {@link string } Unique identifier of the API credential.
    * @param originId {@link string } Unique identifier of the allowed origin.
    * @param requestOptions {@link IRequest.Options}
    */
    deleteAllowedOrigin(merchantId: string, apiCredentialId: string, originId: string, requestOptions?: IRequest.Options): Promise<void>;
    /**
    * @summary Get a list of allowed origins
    * @param merchantId {@link string } The unique identifier of the merchant account.
    * @param apiCredentialId {@link string } Unique identifier of the API credential.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link AllowedOriginsResponse }
    */
    listAllowedOrigins(merchantId: string, apiCredentialId: string, requestOptions?: IRequest.Options): Promise<AllowedOriginsResponse>;
    /**
    * @summary Get an allowed origin
    * @param merchantId {@link string } The unique identifier of the merchant account.
    * @param apiCredentialId {@link string } Unique identifier of the API credential.
    * @param originId {@link string } Unique identifier of the allowed origin.
    * @param requestOptions {@link IRequest.Options}
    * @return {@link AllowedOrigin }
    */
    getAllowedOrigin(merchantId: string, apiCredentialId: string, originId: string, requestOptions?: IRequest.Options): Promise<AllowedOrigin>;
    /**
    * @summary Create an allowed origin
    * @param merchantId {@link string } The unique identifier of the merchant account.
    * @param apiCredentialId {@link string } Unique identifier of the API credential.
    * @param allowedOrigin {@link AllowedOrigin }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link AllowedOriginsResponse }
    */
    createAllowedOrigin(merchantId: string, apiCredentialId: string, allowedOrigin: AllowedOrigin, requestOptions?: IRequest.Options): Promise<AllowedOriginsResponse>;
}
