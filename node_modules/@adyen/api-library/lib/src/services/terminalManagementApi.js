"use strict";
/*
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TerminalManagementAPI = void 0;
const getJsonResponse_1 = __importDefault(require("../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../service"));
const resource_1 = __importDefault(require("./resource"));
const models_1 = require("../typings/terminalManagement/models");
class TerminalManagementAPI extends service_1.default {
    constructor(client) {
        super(client);
        this.API_BASEPATH = "https://postfmapi-test.adyen.com/postfmapi/terminal/v1";
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }
    /**
    * @summary Assign terminals
    * @param assignTerminalsRequest {@link AssignTerminalsRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link AssignTerminalsResponse }
    */
    async assignTerminals(assignTerminalsRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/assignTerminals`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(assignTerminalsRequest, "AssignTerminalsRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "AssignTerminalsResponse");
    }
    /**
    * @summary Get the account or store of a terminal
    * @param findTerminalRequest {@link FindTerminalRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link FindTerminalResponse }
    */
    async findTerminal(findTerminalRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/findTerminal`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(findTerminalRequest, "FindTerminalRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "FindTerminalResponse");
    }
    /**
    * @summary Get the stores of an account
    * @param getStoresUnderAccountRequest {@link GetStoresUnderAccountRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link GetStoresUnderAccountResponse }
    */
    async getStoresUnderAccount(getStoresUnderAccountRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/getStoresUnderAccount`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(getStoresUnderAccountRequest, "GetStoresUnderAccountRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "GetStoresUnderAccountResponse");
    }
    /**
    * @summary Get the details of a terminal
    * @param getTerminalDetailsRequest {@link GetTerminalDetailsRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link GetTerminalDetailsResponse }
    */
    async getTerminalDetails(getTerminalDetailsRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/getTerminalDetails`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(getTerminalDetailsRequest, "GetTerminalDetailsRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "GetTerminalDetailsResponse");
    }
    /**
    * @summary Get the list of terminals
    * @param getTerminalsUnderAccountRequest {@link GetTerminalsUnderAccountRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link GetTerminalsUnderAccountResponse }
    */
    async getTerminalsUnderAccount(getTerminalsUnderAccountRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/getTerminalsUnderAccount`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(getTerminalsUnderAccountRequest, "GetTerminalsUnderAccountRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "GetTerminalsUnderAccountResponse");
    }
}
exports.TerminalManagementAPI = TerminalManagementAPI;
exports.default = TerminalManagementAPI;
//# sourceMappingURL=terminalManagementApi.js.map