"use strict";
/*
 * The version of the OpenAPI document: v68
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentAPI = void 0;
const getJsonResponse_1 = __importDefault(require("../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../service"));
const resource_1 = __importDefault(require("./resource"));
const models_1 = require("../typings/payment/models");
class PaymentAPI extends service_1.default {
    constructor(client) {
        super(client);
        this.API_BASEPATH = "https://pal-test.adyen.com/pal/servlet/Payment/v68";
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }
    /**
    * @summary Change the authorised amount
    * @param adjustAuthorisationRequest {@link AdjustAuthorisationRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async adjustAuthorisation(adjustAuthorisationRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/adjustAuthorisation`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(adjustAuthorisationRequest, "AdjustAuthorisationRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
    /**
    * @summary Create an authorisation
    * @param paymentRequest {@link PaymentRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentResult }
    */
    async authorise(paymentRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/authorise`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentRequest, "PaymentRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentResult");
    }
    /**
    * @summary Complete a 3DS authorisation
    * @param paymentRequest3d {@link PaymentRequest3d }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentResult }
    */
    async authorise3d(paymentRequest3d, requestOptions) {
        const endpoint = `${this.baseUrl}/authorise3d`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentRequest3d, "PaymentRequest3d");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentResult");
    }
    /**
    * @summary Complete a 3DS2 authorisation
    * @param paymentRequest3ds2 {@link PaymentRequest3ds2 }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentResult }
    */
    async authorise3ds2(paymentRequest3ds2, requestOptions) {
        const endpoint = `${this.baseUrl}/authorise3ds2`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentRequest3ds2, "PaymentRequest3ds2");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentResult");
    }
    /**
    * @summary Cancel an authorisation
    * @param cancelRequest {@link CancelRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async cancel(cancelRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/cancel`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(cancelRequest, "CancelRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
    /**
    * @summary Cancel or refund a payment
    * @param cancelOrRefundRequest {@link CancelOrRefundRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async cancelOrRefund(cancelOrRefundRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/cancelOrRefund`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(cancelOrRefundRequest, "CancelOrRefundRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
    /**
    * @summary Capture an authorisation
    * @param captureRequest {@link CaptureRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async capture(captureRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/capture`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(captureRequest, "CaptureRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
    /**
    * @summary Create a donation
    * @param donationRequest {@link DonationRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async donate(donationRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/donate`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(donationRequest, "DonationRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
    /**
    * @summary Get the 3DS authentication result
    * @param authenticationResultRequest {@link AuthenticationResultRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link AuthenticationResultResponse }
    */
    async getAuthenticationResult(authenticationResultRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/getAuthenticationResult`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(authenticationResultRequest, "AuthenticationResultRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "AuthenticationResultResponse");
    }
    /**
    * @summary Refund a captured payment
    * @param refundRequest {@link RefundRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async refund(refundRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/refund`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(refundRequest, "RefundRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
    /**
    * @summary Get the 3DS2 authentication result
    * @param threeDS2ResultRequest {@link ThreeDS2ResultRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ThreeDS2ResultResponse }
    */
    async retrieve3ds2Result(threeDS2ResultRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/retrieve3ds2Result`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(threeDS2ResultRequest, "ThreeDS2ResultRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ThreeDS2ResultResponse");
    }
    /**
    * @summary Cancel an authorisation using your reference
    * @param technicalCancelRequest {@link TechnicalCancelRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async technicalCancel(technicalCancelRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/technicalCancel`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(technicalCancelRequest, "TechnicalCancelRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
    /**
    * @summary Cancel an in-person refund
    * @param voidPendingRefundRequest {@link VoidPendingRefundRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ModificationResult }
    */
    async voidPendingRefund(voidPendingRefundRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/voidPendingRefund`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(voidPendingRefundRequest, "VoidPendingRefundRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "ModificationResult");
    }
}
exports.PaymentAPI = PaymentAPI;
exports.default = PaymentAPI;
//# sourceMappingURL=paymentApi.js.map