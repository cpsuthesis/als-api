"use strict";
/*
 * The version of the OpenAPI document: v70
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModificationsApi = void 0;
const getJsonResponse_1 = __importDefault(require("../../helpers/getJsonResponse"));
const service_1 = __importDefault(require("../../service"));
const resource_1 = __importDefault(require("../resource"));
const models_1 = require("../../typings/checkout/models");
class ModificationsApi extends service_1.default {
    constructor(client) {
        super(client);
        this.API_BASEPATH = "https://checkout-test.adyen.com/v70";
        this.baseUrl = this.createBaseUrl(this.API_BASEPATH);
    }
    /**
    * @summary Cancel an authorised payment
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param standalonePaymentCancelRequest {@link StandalonePaymentCancelRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link StandalonePaymentCancelResponse }
    */
    async cancelAuthorisedPayment(standalonePaymentCancelRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/cancels`;
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(standalonePaymentCancelRequest, "StandalonePaymentCancelRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "StandalonePaymentCancelResponse");
    }
    /**
    * @summary Update an authorised amount
    * @param paymentPspReference {@link string } The [&#x60;pspReference&#x60;](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment.
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param paymentAmountUpdateRequest {@link PaymentAmountUpdateRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentAmountUpdateResponse }
    */
    async updateAuthorisedAmount(paymentPspReference, paymentAmountUpdateRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/payments/{paymentPspReference}/amountUpdates`
            .replace("{" + "paymentPspReference" + "}", encodeURIComponent(String(paymentPspReference)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentAmountUpdateRequest, "PaymentAmountUpdateRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentAmountUpdateResponse");
    }
    /**
    * @summary Cancel an authorised payment
    * @param paymentPspReference {@link string } The [&#x60;pspReference&#x60;](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to cancel.
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param paymentCancelRequest {@link PaymentCancelRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentCancelResponse }
    */
    async cancelAuthorisedPaymentByPspReference(paymentPspReference, paymentCancelRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/payments/{paymentPspReference}/cancels`
            .replace("{" + "paymentPspReference" + "}", encodeURIComponent(String(paymentPspReference)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentCancelRequest, "PaymentCancelRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentCancelResponse");
    }
    /**
    * @summary Capture an authorised payment
    * @param paymentPspReference {@link string } The [&#x60;pspReference&#x60;](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to capture.
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param paymentCaptureRequest {@link PaymentCaptureRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentCaptureResponse }
    */
    async captureAuthorisedPayment(paymentPspReference, paymentCaptureRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/payments/{paymentPspReference}/captures`
            .replace("{" + "paymentPspReference" + "}", encodeURIComponent(String(paymentPspReference)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentCaptureRequest, "PaymentCaptureRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentCaptureResponse");
    }
    /**
    * @summary Refund a captured payment
    * @param paymentPspReference {@link string } The [&#x60;pspReference&#x60;](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to refund.
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param paymentRefundRequest {@link PaymentRefundRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentRefundResponse }
    */
    async refundCapturedPayment(paymentPspReference, paymentRefundRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/payments/{paymentPspReference}/refunds`
            .replace("{" + "paymentPspReference" + "}", encodeURIComponent(String(paymentPspReference)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentRefundRequest, "PaymentRefundRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentRefundResponse");
    }
    /**
    * @summary Refund or cancel a payment
    * @param paymentPspReference {@link string } The [&#x60;pspReference&#x60;](https://docs.adyen.com/api-explorer/#/CheckoutService/latest/post/payments__resParam_pspReference) of the payment that you want to reverse.
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param paymentReversalRequest {@link PaymentReversalRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link PaymentReversalResponse }
    */
    async refundOrCancelPayment(paymentPspReference, paymentReversalRequest, requestOptions) {
        const endpoint = `${this.baseUrl}/payments/{paymentPspReference}/reversals`
            .replace("{" + "paymentPspReference" + "}", encodeURIComponent(String(paymentPspReference)));
        const resource = new resource_1.default(this, endpoint);
        const request = models_1.ObjectSerializer.serialize(paymentReversalRequest, "PaymentReversalRequest");
        const response = await (0, getJsonResponse_1.default)(resource, request, { ...requestOptions, method: "POST" });
        return models_1.ObjectSerializer.deserialize(response, "PaymentReversalResponse");
    }
}
exports.ModificationsApi = ModificationsApi;
//# sourceMappingURL=modificationsApi.js.map