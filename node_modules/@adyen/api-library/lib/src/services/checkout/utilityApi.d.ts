import Service from "../../service";
import Client from "../../client";
import { ApplePaySessionRequest } from "../../typings/checkout/models";
import { ApplePaySessionResponse } from "../../typings/checkout/models";
import { UtilityRequest } from "../../typings/checkout/models";
import { UtilityResponse } from "../../typings/checkout/models";
import { IRequest } from "../../typings/requestOptions";
export declare class UtilityApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Get an Apple Pay session
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param applePaySessionRequest {@link ApplePaySessionRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link ApplePaySessionResponse }
    */
    getApplePaySession(applePaySessionRequest: ApplePaySessionRequest, requestOptions?: IRequest.Options): Promise<ApplePaySessionResponse>;
    /**
    * @summary Create originKey values for domains
    * @param idempotencyKey {@link string } A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
    * @param utilityRequest {@link UtilityRequest }
    * @param requestOptions {@link IRequest.Options}
    * @return {@link UtilityResponse }
    */
    originKeys(utilityRequest: UtilityRequest, requestOptions?: IRequest.Options): Promise<UtilityResponse>;
}
